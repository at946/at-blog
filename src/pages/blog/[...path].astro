---
export const prerender = true;

import {
	type CollectionEntry,
	getCollection,
	getEntry,
	getEntryBySlug,
} from 'astro:content';
import PostLayout from '../../layouts/post.astro';
import estimateReadingTime from '../../utils/estimateReadingTime';

export async function getStaticPaths() {
	const allPosts: CollectionEntry<'blog'>[] = await getCollection('blog');
	return allPosts.map((post) => ({
		params: {
			path: post.slug,
		},
	}));
}

const { path } = Astro.params;
const entry = await getEntry('blog', path);
const { data, body } = entry;
const { Content } = await entry.render();

const plainText: string = body
	.replaceAll(/#{1,6} /g, '')
	.replaceAll(/\*{1,3}/g, '')
	.replaceAll(/!\[.*\]\(.*\)/g, '')
	.replaceAll(/\[(.*)\]\(.*\)/g, '$1')
	.replaceAll('---', '')
	.replaceAll(/<!-- .*? -->/g, '')
	.replaceAll('\n', ' ')
	.replaceAll(/{%.*?\/%}/g, '')
	.replaceAll(/```.*?```/g, '')
	.replaceAll('`', '')
	.replaceAll(/ +/g, ' ');
const beginning: string = plainText.slice(0, 199);
const readingTime: number = estimateReadingTime(plainText.length);
---
<PostLayout content={data} description={beginning} slug={path} readingTime={readingTime}>
	<Content />
</PostLayout>
