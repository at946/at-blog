---
import { Image } from 'astro:assets';
import ogpParser, { type OgpParserResult } from 'ogp-parser';
import Link from './Link.astro';
import LinkCard from './LinkCard.astro';
import Oembed from './Oembed.astro';

interface Props {
	url: string;
	type?: 'link' | 'linkCard' | 'oembed';
}

const { url, type = 'linkCard' } = Astro.props;

const parsedOgp: OgpParserResult = await ogpParser(url)
	.then((data) => {
		return data;
	})
	.catch((error) => {
		throw error;
	});

const ogTitle: string = parsedOgp.ogp['og:title'] || parsedOgp.title;
const ogUrl: string = parsedOgp.ogp['og:url'] || url;
const ogImage: string = parsedOgp.ogp['og:image'];
const ogImageAlt: string = parsedOgp.ogp['og:image:alt'];
const html: string = parsedOgp.oembed?.html;

if (type === 'oembed' && !html) throw `No oembed html returns from ${url}`;
---

{ type === 'link' &&
  <Link href={String(ogUrl)} title={ogTitle}>{ogTitle}</Link>
}
{ type === 'linkCard' &&
  <LinkCard name={ogTitle} href={String(ogUrl)} imageSrc={ogImage} imageAlt={ogImageAlt} />
}
{ type === 'oembed' &&
  <div set:html={html} class="flex justify-center" />
}