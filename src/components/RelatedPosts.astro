---
import { type CollectionEntry, getCollection } from 'astro:content';
import { Icon } from 'astro-icon/components';
import Link from './mdoc/Link.astro';

interface Props {
	slug: string;
	tags: string[];
	class?: string;
}

const { slug, tags } = Astro.props;
const allPosts = await getCollection('blog');

const posts = allPosts
	.filter(
		(post: CollectionEntry<'blog'>) =>
			post.slug !== slug &&
			post.data.tags &&
			post.data.tags.filter((tag) => tags.includes(tag)).length > 0,
	)
	.map((post: CollectionEntry<'blog'>) => ({
		...post,
		sameTagCount:
			post.data.tags?.filter((tag) => tags.includes(tag)).length || 0,
	}))
	.sort((a, b) => {
		if (a.sameTagCount > b.sameTagCount) return -1;
		if (a.sameTagCount < b.sameTagCount) return 1;

		if (a.data.publicationDate > b.data.publicationDate) return -1;
		if (a.data.publicationDate < b.data.publicationDate) return 1;

		return 0;
	})
	.slice(0, 5);
---

{ posts.length > 0 &&
	<div class={Astro.props.class}>
		<h2>Related posts</h2>
		<ul>
			{ posts.map((post) => (
				<li>
					<Link href={post.data.externalUrl ?? `/blog/${post.slug}`}>
						{ tags?.includes('Articles') && <Icon name="mdi:document-sign" class="inline align-middle mr-2" />} 
			      { tags?.includes('Slides') && <Icon name="mdi:presentation" class="inline align-middle mr-2" />} 
      			{ tags?.includes('Videos') && <Icon name="mdi:video-youtube" class="inline align-middle mr-2" />} 
						<span>{post.data.title}</span>
						{ post.data.externalUrl && <Icon name="mdi:external-link" class="inline align-middle ml-2" /> }
					</Link>
				</li>
			))}
		</ul>
	</div>
}