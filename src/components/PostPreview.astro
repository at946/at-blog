---
import type { CollectionEntry } from 'astro:content';
import LinkTag from '@/components/LinkTag.astro';
import extractSentenceFromMarkdocBody from '@/utils/extractSentenceFromMarkdocBody';
import { Icon } from 'astro-icon/components';
import estimateReadingTime from '../utils/estimateReadingTime';
import Link from './mdoc/Link.astro';

interface Props {
	post: CollectionEntry<'blog'>;
	class?: string;
}

const { post } = Astro.props;
const { title, publicationDate, tags, externalUrl } = post.data;
const slug: string = post.slug;
const sentence: string = extractSentenceFromMarkdocBody(post.body);
const readingTime: number = estimateReadingTime(sentence.length);
---

<div class:list={["text-center md:text-left", Astro.props.class]}>
  <p class="mb-2 font-semibold">
    { new Intl.DateTimeFormat('ja-JP', { dateStyle: 'long' }).format(publicationDate)}
  </p>
  <h2 class="text-2xl font-bold mb-4" style="word-break: auto-phrase;">
    <Link class="hover:text-primary" href={externalUrl ?? `/blog/${slug}`}>
      { tags?.includes('Articles') && <Icon name="mdi:document-sign" class="inline align-middle" />} 
      { tags?.includes('Slides') && <Icon name="mdi:presentation" class="inline align-middle" />} 
      <span class="align-middle">
        {title}
      </span>
      { externalUrl && <Icon name="mdi:external-link" class="inline align-middle" /> }
    </span>
    </Link>
  </h2>
  <div class="flex gap-2 flex-wrap justify-center md:justify-start mb-2">
    { tags && tags.length > 0 && tags.map(tag =>
      <LinkTag name={tag} href={`/tags/${tag}`} />
    )}
  </div>
  { !externalUrl &&
    <p>読了時間: { readingTime }分</p>
  }
</div>
