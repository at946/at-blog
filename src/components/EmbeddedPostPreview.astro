---
import type { CollectionEntry } from 'astro:content';
import LinkTag from '@/components/LinkTag.astro';
import DocswellEmbed from '@/components/mdoc/DocswellEmbed.astro';
import SpeakerDeckEmbed from '@/components/mdoc/SpeakerDeckEmbed.astro';
import YouTubeEmbed from '@/components/mdoc/YouTubeEmbed.astro';
import { Icon } from 'astro-icon/components';
import Link from './mdoc/Link.astro';

interface Props {
	post: CollectionEntry<'blog'>;
	class?: string;
}

const { post } = Astro.props;
const {
	title,
	publicationDate,
	tags,
	externalUrl,
	type,
	youtubeEmbeddedUrl,
	docswellId,
	speakerDeckId,
} = post.data;
---

<div class:list={["text-center", Astro.props.class]}>

  <p class="mb-2 font-semibold">
    { new Intl.DateTimeFormat('ja-JP', { dateStyle: 'long' }).format(publicationDate)}
  </p>

  <h2 class="text-2xl font-bold mb-4" style="word-break: auto-phrase;">
    <Link class="hover:text-primary" href=`${externalUrl}`>
      { type === 'slide' && <Icon name="mdi:presentation" class="inline align-middle" />}
      { type === 'video' && <Icon name="mdi:video-youtube" class="inline align-middle" />} 
      <span class="align-middle">
        {title}
      </span>
      <Icon name="mdi:external-link" class="inline align-middle" />
    </Link>
  </h2>

  <div class="mb-4">
    { type === 'slide' && docswellId && <DocswellEmbed id={docswellId} /> }
    { type === 'slide' && speakerDeckId && <SpeakerDeckEmbed id={speakerDeckId} /> }
    { type === 'video' && youtubeEmbeddedUrl && <YouTubeEmbed src={youtubeEmbeddedUrl} /> }
  </div>

  <div class="flex gap-2 flex-wrap justify-center">
    { tags && tags.length > 0 && tags.map(tag =>
      <LinkTag name={tag} href={`/tags/${tag}`} />
    )}
  </div>

</div>
