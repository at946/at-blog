---
title: "TestCafeでテストに失敗したときにスクリーンショットを撮りたい"
tags:
  - TestCafe
  - テスト自動化
  - E2Eテスト
publicationDate: 2021-09-18
isPublished: true
---

TestCafeのエラーメッセージはとてもわかりやすいのですが、「そんなわけない。実際に画面見たい。」となることもありますよね。

この記事では、TestCafeでテストに失敗時のスクリーンショットを自動的に保存できるようにします。

## `-s takeOnFails=true`オプションをつけるだけ

ま、以上なんですが...。

公式サイトだと、こちらに書かれております。

{% ogpLink url="https://testcafe.io/documentation/402639/reference/command-line-interface#takeonfails" /%}

便利すぎやしませんか...TestCafeさん...。

TestCafeの起動時に以下のようにオプションを付与するだけです。

```sh
$ testcafe chrome:headless -s takeOnFails=true
```

## package.jsonに追記する

僕たちはNuxtで開発をしており、テストは`yarn test`コマンドで起動するようにしています。

```json:package.json
{
  "script": {
    ...略...
    "test": "testcafe chrome:headless",
    ...略...
  },
}
```

と記載していました。ここを、以下のように書き替えるだけです。

```diff:json:package.json
- "test": "testcafe chrome:headless",
+ "test": "testcafe chrome:headless -s takeOnFails=true",
```

## スクリーンショットはどこへ...

スクリーンショットはプロジェクトのルートディレクトリに`screenshots`ディレクトリが自動で作成され、その中にテストケースごとのディレクトリが作られて保存されます。
テストケースのディレクトリには番号が振られているので、複数のテストが失敗したときでもどのテストがどのスクリーンショットなのかわかりやすいです。

[`path`オプション](https://testcafe.io/documentation/402639/reference/command-line-interface#path)を使えば、ディレクトリの場所を変えることもできるみたいですが、特にルートディレクトリにディレクトリが作成されても困っていないので指定していません。

ただ、screenshotはGitHubなどのGitサービスにあげる必要がないものなので、`.gitignore`でGitの対象から外してます。

```text:.gitignore
screenshots
```

また、新しいテストを始めるときに、古いテストのスクリーンショットが残っているとわけがわからなくなってしまいます。
そこで、`package.json`で`testcafe`実行前に`screenshots`ディレクトリを削除するようにしています。

```diff:json:package.json
- "test": "testcafe chrome:headless -s takeOnFails=true"
+ "test": "rm -rf ./screenshots && testcafe chrome:headless -s takeOnFails=true"
```

これでステキな自動テストライフを過ごせます🎁。

## 番外編：失敗時のスクリーンショットじゃわからない...

そんなときもあります。
なんかエラー画面が出てるだけで終わり...その直前の画面が見たい...
そんなときはテストコード内で意図的にスクリーンショットを撮ることもできます。

```js
test('take a screenshot', async t => {
  await t
    .typeText('#input', 'hello')
    .takeScreenshot()
    .click('#button')
    .expect(...).eql(...)
})
```

このように`#button`のクリック直後のテストの失敗原因がスクリーンショットからはわからないときは、`takeScreenshot()`を使ってクリック直前の画面をスクリーンショットを取得できます。
これも特に指定しなければ`./screenshots`ディレクトリの中のテストケースのディレクトリ内に、テスト失敗のスクリーンショットと分けて格納されます。
`takeScreenshot()`もパスや全画面を対象にするかを選択できますので、気になる方は公式サイトを御覧ください。

{% ogpLink url="https://testcafe.io/documentation/402675/reference/test-api/testcontroller/takescreenshot" /%}

## まとめ
前回に引き続き、TestCafeについてお話しました。
テスト時のスクリーンショットは、自作しなかったりしなくてはいけないテストフレームワークもあったりするので、TestCafeはかなり手軽でした。
みなさんにステキなテストライフが訪れますように🤞。
